//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HoldTimer.Properties {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "16.8.1.0")]
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("80, 60, 100")]
        public global::System.Drawing.Color TimerBackColor {
            get {
                return ((global::System.Drawing.Color)(this["TimerBackColor"]));
            }
            set {
                this["TimerBackColor"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("63, 150, 131")]
        public global::System.Drawing.Color TimeDefaultColor {
            get {
                return ((global::System.Drawing.Color)(this["TimeDefaultColor"]));
            }
            set {
                this["TimeDefaultColor"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Yellow")]
        public global::System.Drawing.Color AlertTimeColor {
            get {
                return ((global::System.Drawing.Color)(this["AlertTimeColor"]));
            }
            set {
                this["AlertTimeColor"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Red")]
        public global::System.Drawing.Color OverTimeColor {
            get {
                return ((global::System.Drawing.Color)(this["OverTimeColor"]));
            }
            set {
                this["OverTimeColor"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Gray")]
        public global::System.Drawing.Color TimerForeColor {
            get {
                return ((global::System.Drawing.Color)(this["TimerForeColor"]));
            }
            set {
                this["TimerForeColor"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("00:02:00")]
        public global::System.TimeSpan OverTimeValue {
            get {
                return ((global::System.TimeSpan)(this["OverTimeValue"]));
            }
            set {
                this["OverTimeValue"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("51, 31, 67")]
        public global::System.Drawing.Color AppBackColor {
            get {
                return ((global::System.Drawing.Color)(this["AppBackColor"]));
            }
            set {
                this["AppBackColor"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Default")]
        public string SelectedTheme {
            get {
                return ((string)(this["SelectedTheme"]));
            }
            set {
                this["SelectedTheme"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("00:00:30")]
        public global::System.TimeSpan AlertNotificationDisplayTime {
            get {
                return ((global::System.TimeSpan)(this["AlertNotificationDisplayTime"]));
            }
            set {
                this["AlertNotificationDisplayTime"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool AlwaysOnTop {
            get {
                return ((bool)(this["AlwaysOnTop"]));
            }
            set {
                this["AlwaysOnTop"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("144, 164, 174")]
        public global::System.Drawing.Color ToolbarForeColor {
            get {
                return ((global::System.Drawing.Color)(this["ToolbarForeColor"]));
            }
            set {
                this["ToolbarForeColor"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("66, 66, 66")]
        public global::System.Drawing.Color ToolbarBackColor {
            get {
                return ((global::System.Drawing.Color)(this["ToolbarBackColor"]));
            }
            set {
                this["ToolbarBackColor"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("66, 66, 66")]
        public global::System.Drawing.Color ButtonBackColor {
            get {
                return ((global::System.Drawing.Color)(this["ButtonBackColor"]));
            }
            set {
                this["ButtonBackColor"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("55, 71, 79")]
        public global::System.Drawing.Color ButtonHoverColor {
            get {
                return ((global::System.Drawing.Color)(this["ButtonHoverColor"]));
            }
            set {
                this["ButtonHoverColor"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("66, 66, 66")]
        public global::System.Drawing.Color ButtonPressedColor {
            get {
                return ((global::System.Drawing.Color)(this["ButtonPressedColor"]));
            }
            set {
                this["ButtonPressedColor"] = value;
            }
        }
    }
}
